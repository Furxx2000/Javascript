{"dependencies":[{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629813957808},{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629815470467},{"name":"./_baseRest.js","loc":{"line":1,"column":21},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\zipWith.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseRest.js"},{"name":"./unzipWith.js","loc":{"line":2,"column":22},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\zipWith.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\unzipWith.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseRest = require('./_baseRest.js');\n\nvar _baseRest2 = _interopRequireDefault(_baseRest);\n\nvar _unzipWith = require('./unzipWith.js');\n\nvar _unzipWith2 = _interopRequireDefault(_unzipWith);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.zip` except that it accepts `iteratee` to specify\n * how grouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @param {Function} [iteratee=_.identity] The function to combine\n *  grouped values.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n *   return a + b + c;\n * });\n * // => [111, 222]\n */\nvar zipWith = (0, _baseRest2.default)(function (arrays) {\n  var length = arrays.length,\n      iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n  return (0, _unzipWith2.default)(arrays, iteratee);\n});\n\nexports.default = zipWith;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":4,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":24,"column":0}},{"name":"zipWith","generated":{"line":37,"column":4},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":24,"column":4}},{"generated":{"line":37,"column":14},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":24,"column":14}},{"generated":{"line":37,"column":38},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":24,"column":23}},{"name":"arrays","generated":{"line":37,"column":48},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":24,"column":32}},{"generated":{"line":37,"column":54},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":24,"column":23}},{"generated":{"line":37,"column":56},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":24,"column":40}},{"generated":{"line":38,"column":0},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":25,"column":2}},{"name":"length","generated":{"line":38,"column":6},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":25,"column":6}},{"name":"arrays","generated":{"line":38,"column":15},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":25,"column":15}},{"name":"length","generated":{"line":38,"column":22},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":25,"column":22}},{"generated":{"line":38,"column":28},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":25,"column":2}},{"generated":{"line":39,"column":0},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":25,"column":2}},{"name":"iteratee","generated":{"line":39,"column":6},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":26,"column":6}},{"name":"length","generated":{"line":39,"column":17},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":26,"column":17}},{"generated":{"line":39,"column":26},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":26,"column":26}},{"generated":{"line":39,"column":27},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":26,"column":17}},{"name":"arrays","generated":{"line":39,"column":30},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":26,"column":30}},{"name":"length","generated":{"line":39,"column":37},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":26,"column":37}},{"generated":{"line":39,"column":46},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":26,"column":46}},{"generated":{"line":39,"column":47},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":26,"column":30}},{"generated":{"line":39,"column":48},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":26,"column":17}},{"name":"undefined","generated":{"line":39,"column":51},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":26,"column":51}},{"generated":{"line":39,"column":60},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":25,"column":2}},{"name":"iteratee","generated":{"line":41,"column":0},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":28,"column":2}},{"generated":{"line":41,"column":13},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":28,"column":13}},{"name":"iteratee","generated":{"line":41,"column":20},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":28,"column":20}},{"generated":{"line":41,"column":28},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":28,"column":13}},{"generated":{"line":41,"column":32},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":28,"column":32}},{"generated":{"line":41,"column":42},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":28,"column":13}},{"name":"arrays","generated":{"line":41,"column":46},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":28,"column":46}},{"name":"pop","generated":{"line":41,"column":53},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":28,"column":53}},{"generated":{"line":41,"column":56},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":28,"column":46}},{"name":"iteratee","generated":{"line":41,"column":60},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":28,"column":60}},{"generated":{"line":41,"column":68},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":28,"column":13}},{"name":"undefined","generated":{"line":41,"column":72},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":28,"column":72}},{"generated":{"line":41,"column":81},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":28,"column":2}},{"generated":{"line":42,"column":0},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":29,"column":2}},{"generated":{"line":42,"column":9},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":29,"column":9}},{"name":"arrays","generated":{"line":42,"column":34},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":29,"column":19}},{"generated":{"line":42,"column":40},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":29,"column":9}},{"name":"iteratee","generated":{"line":42,"column":42},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":29,"column":27}},{"generated":{"line":42,"column":50},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":29,"column":9}},{"generated":{"line":42,"column":51},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":29,"column":2}},{"generated":{"line":43,"column":0},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":30,"column":1}},{"generated":{"line":43,"column":1},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":24,"column":14}},{"generated":{"line":43,"column":2},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":24,"column":0}},{"name":"zipWith","generated":{"line":45,"column":18},"source":"node_modules\\lodash-es\\zipWith.js","original":{"line":32,"column":15}}],"sources":{"node_modules\\lodash-es\\zipWith.js":"import baseRest from './_baseRest.js';\nimport unzipWith from './unzipWith.js';\n\n/**\n * This method is like `_.zip` except that it accepts `iteratee` to specify\n * how grouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @param {Function} [iteratee=_.identity] The function to combine\n *  grouped values.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n *   return a + b + c;\n * });\n * // => [111, 222]\n */\nvar zipWith = baseRest(function(arrays) {\n  var length = arrays.length,\n      iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n  return unzipWith(arrays, iteratee);\n});\n\nexport default zipWith;\n"},"lineCount":null}},"hash":"85c1e77f10fdf6777bf3903aff5d1b3a","cacheData":{"env":{}},"id":325}