{"dependencies":[{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629813957808},{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629815470467},{"name":"./_baseEach.js","loc":{"line":1,"column":21},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseAggregator.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseEach.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseEach = require('./_baseEach.js');\n\nvar _baseEach2 = _interopRequireDefault(_baseEach);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  (0, _baseEach2.default)(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexports.default = baseAggregator;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":3,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":14,"column":0}},{"name":"baseAggregator","generated":{"line":24,"column":9},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":14,"column":9}},{"generated":{"line":24,"column":23},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":14,"column":0}},{"name":"collection","generated":{"line":24,"column":24},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":14,"column":24}},{"generated":{"line":24,"column":34},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":14,"column":0}},{"name":"setter","generated":{"line":24,"column":36},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":14,"column":36}},{"generated":{"line":24,"column":42},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":14,"column":0}},{"name":"iteratee","generated":{"line":24,"column":44},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":14,"column":44}},{"generated":{"line":24,"column":52},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":14,"column":0}},{"name":"accumulator","generated":{"line":24,"column":54},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":14,"column":54}},{"generated":{"line":24,"column":65},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":14,"column":0}},{"generated":{"line":24,"column":67},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":14,"column":67}},{"generated":{"line":25,"column":0},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":15,"column":2}},{"name":"collection","generated":{"line":25,"column":26},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":15,"column":11}},{"generated":{"line":25,"column":36},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":15,"column":2}},{"generated":{"line":25,"column":38},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":15,"column":23}},{"name":"value","generated":{"line":25,"column":48},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":15,"column":32}},{"generated":{"line":25,"column":53},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":15,"column":23}},{"name":"key","generated":{"line":25,"column":55},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":15,"column":39}},{"generated":{"line":25,"column":58},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":15,"column":23}},{"name":"collection","generated":{"line":25,"column":60},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":15,"column":44}},{"generated":{"line":25,"column":70},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":15,"column":23}},{"generated":{"line":25,"column":72},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":15,"column":56}},{"name":"setter","generated":{"line":26,"column":0},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":16,"column":4}},{"name":"accumulator","generated":{"line":26,"column":11},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":16,"column":11}},{"generated":{"line":26,"column":22},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":16,"column":4}},{"name":"value","generated":{"line":26,"column":24},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":16,"column":24}},{"generated":{"line":26,"column":29},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":16,"column":4}},{"name":"iteratee","generated":{"line":26,"column":31},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":16,"column":31}},{"name":"value","generated":{"line":26,"column":40},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":16,"column":40}},{"generated":{"line":26,"column":45},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":16,"column":31}},{"generated":{"line":26,"column":46},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":16,"column":4}},{"name":"collection","generated":{"line":26,"column":48},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":16,"column":48}},{"generated":{"line":26,"column":58},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":16,"column":4}},{"generated":{"line":27,"column":0},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":17,"column":3}},{"generated":{"line":27,"column":3},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":15,"column":2}},{"generated":{"line":28,"column":0},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":18,"column":2}},{"name":"accumulator","generated":{"line":28,"column":9},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":18,"column":9}},{"generated":{"line":28,"column":20},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":18,"column":2}},{"generated":{"line":29,"column":0},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":19,"column":1}},{"name":"baseAggregator","generated":{"line":31,"column":18},"source":"node_modules\\lodash-es\\_baseAggregator.js","original":{"line":21,"column":15}}],"sources":{"node_modules\\lodash-es\\_baseAggregator.js":"import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n"},"lineCount":null}},"hash":"091716e84cb1b0d3d55a51b23fb49e07","cacheData":{"env":{}},"id":842}