{"dependencies":[{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629813957808},{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629815470467}],"generated":{"js":"\"use strict\";function e(e,t,r,u,n){return n(e,function(e,n,o){r=u?(u=!1,e):t(r,e,n,o)}),r}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=e;","map":{"mappings":[{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"baseReduce","original":{"line":23,"column":15},"generated":{"line":1,"column":0}},{"source":"node_modules\\lodash-es\\_baseReduce.js","original":{"line":14,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"baseReduce","original":{"line":14,"column":9},"generated":{"line":1,"column":22}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"collection","original":{"line":14,"column":20},"generated":{"line":1,"column":24}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"iteratee","original":{"line":14,"column":32},"generated":{"line":1,"column":26}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"accumulator","original":{"line":14,"column":42},"generated":{"line":1,"column":28}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"initAccum","original":{"line":14,"column":55},"generated":{"line":1,"column":30}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"eachFunc","original":{"line":14,"column":66},"generated":{"line":1,"column":32}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"accumulator","original":{"line":20,"column":9},"generated":{"line":1,"column":35}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"collection","original":{"line":15,"column":11},"generated":{"line":1,"column":42}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"collection","original":{"line":15,"column":11},"generated":{"line":1,"column":44}},{"source":"node_modules\\lodash-es\\_baseReduce.js","original":{"line":15,"column":23},"generated":{"line":1,"column":46}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"value","original":{"line":15,"column":32},"generated":{"line":1,"column":55}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"index","original":{"line":15,"column":39},"generated":{"line":1,"column":57}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"collection","original":{"line":15,"column":46},"generated":{"line":1,"column":59}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"initAccum","original":{"line":16,"column":18},"generated":{"line":1,"column":62}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"initAccum","original":{"line":16,"column":18},"generated":{"line":1,"column":64}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"initAccum","original":{"line":17,"column":9},"generated":{"line":1,"column":67}},{"source":"node_modules\\lodash-es\\_baseReduce.js","original":{"line":17,"column":21},"generated":{"line":1,"column":70}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"value","original":{"line":17,"column":28},"generated":{"line":1,"column":72}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"iteratee","original":{"line":18,"column":8},"generated":{"line":1,"column":75}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"accumulator","original":{"line":18,"column":17},"generated":{"line":1,"column":77}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"value","original":{"line":18,"column":30},"generated":{"line":1,"column":79}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"index","original":{"line":18,"column":37},"generated":{"line":1,"column":81}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"collection","original":{"line":18,"column":44},"generated":{"line":1,"column":83}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"accumulator","original":{"line":20,"column":9},"generated":{"line":1,"column":88}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"baseReduce","original":{"line":23,"column":15},"generated":{"line":1,"column":90}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"baseReduce","original":{"line":23,"column":15},"generated":{"line":1,"column":97}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"baseReduce","original":{"line":23,"column":15},"generated":{"line":1,"column":112}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"baseReduce","original":{"line":23,"column":15},"generated":{"line":1,"column":120}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"baseReduce","original":{"line":23,"column":15},"generated":{"line":1,"column":133}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"baseReduce","original":{"line":23,"column":15},"generated":{"line":1,"column":134}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"baseReduce","original":{"line":23,"column":15},"generated":{"line":1,"column":141}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"baseReduce","original":{"line":23,"column":15},"generated":{"line":1,"column":145}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"baseReduce","original":{"line":23,"column":15},"generated":{"line":1,"column":153}},{"source":"node_modules\\lodash-es\\_baseReduce.js","name":"baseReduce","original":{"line":23,"column":15},"generated":{"line":1,"column":161}}],"sources":{"node_modules\\lodash-es\\_baseReduce.js":"/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nexport default baseReduce;\n"},"lineCount":null}},"hash":"db4dc8d95f0984ff5a475e81ee8a4e74","cacheData":{"env":{}},"id":770}