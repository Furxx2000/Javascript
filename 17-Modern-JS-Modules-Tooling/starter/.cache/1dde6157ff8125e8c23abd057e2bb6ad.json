{"dependencies":[{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629813957808},{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629815470467},{"name":"./_arrayReduce.js","loc":{"line":1,"column":24},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\reduce.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_arrayReduce.js"},{"name":"./_baseEach.js","loc":{"line":2,"column":21},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\reduce.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseEach.js"},{"name":"./_baseIteratee.js","loc":{"line":3,"column":25},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\reduce.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseIteratee.js"},{"name":"./_baseReduce.js","loc":{"line":4,"column":23},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\reduce.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseReduce.js"},{"name":"./isArray.js","loc":{"line":5,"column":20},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\reduce.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\isArray.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayReduce = require('./_arrayReduce.js');\n\nvar _arrayReduce2 = _interopRequireDefault(_arrayReduce);\n\nvar _baseEach = require('./_baseEach.js');\n\nvar _baseEach2 = _interopRequireDefault(_baseEach);\n\nvar _baseIteratee = require('./_baseIteratee.js');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _baseReduce = require('./_baseReduce.js');\n\nvar _baseReduce2 = _interopRequireDefault(_baseReduce);\n\nvar _isArray = require('./isArray.js');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = (0, _isArray2.default)(collection) ? _arrayReduce2.default : _baseReduce2.default,\n      initAccum = arguments.length < 3;\n\n  return func(collection, (0, _baseIteratee2.default)(iteratee, 4), accumulator, initAccum, _baseEach2.default);\n}\n\nexports.default = reduce;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":4,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":5,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":7,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":44,"column":0}},{"name":"reduce","generated":{"line":66,"column":9},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":44,"column":9}},{"generated":{"line":66,"column":15},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":44,"column":0}},{"name":"collection","generated":{"line":66,"column":16},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":44,"column":16}},{"generated":{"line":66,"column":26},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":44,"column":0}},{"name":"iteratee","generated":{"line":66,"column":28},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":44,"column":28}},{"generated":{"line":66,"column":36},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":44,"column":0}},{"name":"accumulator","generated":{"line":66,"column":38},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":44,"column":38}},{"generated":{"line":66,"column":49},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":44,"column":0}},{"generated":{"line":66,"column":51},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":44,"column":51}},{"generated":{"line":67,"column":0},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":45,"column":2}},{"name":"func","generated":{"line":67,"column":6},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":45,"column":6}},{"generated":{"line":67,"column":13},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":45,"column":13}},{"name":"collection","generated":{"line":67,"column":36},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":45,"column":21}},{"generated":{"line":67,"column":46},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":45,"column":13}},{"name":"arrayReduce","generated":{"line":67,"column":50},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":45,"column":35}},{"generated":{"line":67,"column":71},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":45,"column":13}},{"name":"baseReduce","generated":{"line":67,"column":74},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":45,"column":49}},{"generated":{"line":67,"column":94},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":45,"column":2}},{"generated":{"line":68,"column":0},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":45,"column":2}},{"name":"initAccum","generated":{"line":68,"column":6},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":46,"column":6}},{"name":"arguments","generated":{"line":68,"column":18},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":46,"column":18}},{"name":"length","generated":{"line":68,"column":28},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":46,"column":28}},{"generated":{"line":68,"column":34},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":46,"column":18}},{"generated":{"line":68,"column":37},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":46,"column":37}},{"generated":{"line":68,"column":38},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":45,"column":2}},{"generated":{"line":70,"column":0},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":2}},{"name":"func","generated":{"line":70,"column":9},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":9}},{"name":"collection","generated":{"line":70,"column":14},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":14}},{"generated":{"line":70,"column":24},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":9}},{"generated":{"line":70,"column":26},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":26}},{"name":"iteratee","generated":{"line":70,"column":54},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":39}},{"generated":{"line":70,"column":62},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":26}},{"generated":{"line":70,"column":64},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":49}},{"generated":{"line":70,"column":65},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":26}},{"generated":{"line":70,"column":66},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":9}},{"name":"accumulator","generated":{"line":70,"column":68},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":53}},{"generated":{"line":70,"column":79},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":9}},{"name":"initAccum","generated":{"line":70,"column":81},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":66}},{"generated":{"line":70,"column":90},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":9}},{"name":"baseEach","generated":{"line":70,"column":92},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":77}},{"generated":{"line":70,"column":110},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":9}},{"generated":{"line":70,"column":111},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":48,"column":2}},{"generated":{"line":71,"column":0},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":49,"column":1}},{"name":"reduce","generated":{"line":73,"column":18},"source":"node_modules\\lodash-es\\reduce.js","original":{"line":51,"column":15}}],"sources":{"node_modules\\lodash-es\\reduce.js":"import arrayReduce from './_arrayReduce.js';\nimport baseEach from './_baseEach.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseReduce from './_baseReduce.js';\nimport isArray from './isArray.js';\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nexport default reduce;\n"},"lineCount":null}},"hash":"bd56cc806b5bbf0fb53d8ae4d7133596","cacheData":{"env":{}},"id":221}