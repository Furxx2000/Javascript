{"dependencies":[{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629813957808},{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629815470467}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nexports.default = baseSortBy;","map":{"mappings":[{"generated":{"line":6,"column":0},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":1,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":11,"column":0}},{"name":"baseSortBy","generated":{"line":16,"column":9},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":11,"column":9}},{"generated":{"line":16,"column":19},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":11,"column":0}},{"name":"array","generated":{"line":16,"column":20},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":11,"column":20}},{"generated":{"line":16,"column":25},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":11,"column":0}},{"name":"comparer","generated":{"line":16,"column":27},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":11,"column":27}},{"generated":{"line":16,"column":35},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":11,"column":0}},{"generated":{"line":16,"column":37},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":11,"column":37}},{"generated":{"line":17,"column":0},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":12,"column":2}},{"name":"length","generated":{"line":17,"column":6},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":12,"column":6}},{"name":"array","generated":{"line":17,"column":15},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":12,"column":15}},{"name":"length","generated":{"line":17,"column":21},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":12,"column":21}},{"generated":{"line":17,"column":27},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":12,"column":2}},{"name":"array","generated":{"line":19,"column":0},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":14,"column":2}},{"name":"sort","generated":{"line":19,"column":8},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":14,"column":8}},{"generated":{"line":19,"column":12},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":14,"column":2}},{"name":"comparer","generated":{"line":19,"column":13},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":14,"column":13}},{"generated":{"line":19,"column":21},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":14,"column":2}},{"generated":{"line":20,"column":0},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":15,"column":2}},{"name":"length","generated":{"line":20,"column":9},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":15,"column":9}},{"generated":{"line":20,"column":17},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":15,"column":2}},{"generated":{"line":20,"column":19},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":15,"column":19}},{"name":"array","generated":{"line":21,"column":0},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":16,"column":4}},{"name":"length","generated":{"line":21,"column":10},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":16,"column":10}},{"generated":{"line":21,"column":16},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":16,"column":4}},{"name":"array","generated":{"line":21,"column":20},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":16,"column":20}},{"name":"length","generated":{"line":21,"column":26},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":16,"column":26}},{"generated":{"line":21,"column":32},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":16,"column":20}},{"name":"value","generated":{"line":21,"column":34},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":16,"column":34}},{"generated":{"line":21,"column":39},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":16,"column":4}},{"generated":{"line":22,"column":0},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":17,"column":3}},{"generated":{"line":23,"column":0},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":18,"column":2}},{"name":"array","generated":{"line":23,"column":9},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":18,"column":9}},{"generated":{"line":23,"column":14},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":18,"column":2}},{"generated":{"line":24,"column":0},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":19,"column":1}},{"name":"baseSortBy","generated":{"line":26,"column":18},"source":"node_modules\\lodash-es\\_baseSortBy.js","original":{"line":21,"column":15}}],"sources":{"node_modules\\lodash-es\\_baseSortBy.js":"/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nexport default baseSortBy;\n"},"lineCount":null}},"hash":"476249a9890e2a35d11257c156cf7fc8","cacheData":{"env":{}},"id":883}