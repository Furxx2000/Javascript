{"dependencies":[{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629813957808},{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629815470467},{"name":"./_baseClone.js","loc":{"line":1,"column":22},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\matchesProperty.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseClone.js"},{"name":"./_baseMatchesProperty.js","loc":{"line":2,"column":32},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\matchesProperty.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseMatchesProperty.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseClone = require('./_baseClone.js');\n\nvar _baseClone2 = _interopRequireDefault(_baseClone);\n\nvar _baseMatchesProperty = require('./_baseMatchesProperty.js');\n\nvar _baseMatchesProperty2 = _interopRequireDefault(_baseMatchesProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a function that performs a partial deep comparison between the\n * value at `path` of a given object to `srcValue`, returning `true` if the\n * object value is equivalent, else `false`.\n *\n * **Note:** Partial comparisons will match empty array and empty object\n * `srcValue` values against any array or object value, respectively. See\n * `_.isEqual` for a list of supported value comparisons.\n *\n * **Note:** Multiple values can be checked by combining several matchers\n * using `_.overSome`\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n * @example\n *\n * var objects = [\n *   { 'a': 1, 'b': 2, 'c': 3 },\n *   { 'a': 4, 'b': 5, 'c': 6 }\n * ];\n *\n * _.find(objects, _.matchesProperty('a', 4));\n * // => { 'a': 4, 'b': 5, 'c': 6 }\n *\n * // Checking for several possible values\n * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n */\nfunction matchesProperty(path, srcValue) {\n  return (0, _baseMatchesProperty2.default)(path, (0, _baseClone2.default)(srcValue, CLONE_DEEP_FLAG));\n}\n\nexports.default = matchesProperty;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":4,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":5,"column":0}},{"name":"CLONE_DEEP_FLAG","generated":{"line":18,"column":4},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":5,"column":4}},{"generated":{"line":18,"column":22},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":5,"column":22}},{"generated":{"line":18,"column":23},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":5,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":7,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":40,"column":0}},{"name":"matchesProperty","generated":{"line":53,"column":9},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":40,"column":9}},{"generated":{"line":53,"column":24},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":40,"column":0}},{"name":"path","generated":{"line":53,"column":25},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":40,"column":25}},{"generated":{"line":53,"column":29},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":40,"column":0}},{"name":"srcValue","generated":{"line":53,"column":31},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":40,"column":31}},{"generated":{"line":53,"column":39},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":40,"column":0}},{"generated":{"line":53,"column":41},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":40,"column":41}},{"generated":{"line":54,"column":0},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":41,"column":2}},{"generated":{"line":54,"column":9},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":41,"column":9}},{"name":"path","generated":{"line":54,"column":44},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":41,"column":29}},{"generated":{"line":54,"column":48},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":41,"column":9}},{"generated":{"line":54,"column":50},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":41,"column":35}},{"name":"srcValue","generated":{"line":54,"column":75},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":41,"column":45}},{"generated":{"line":54,"column":83},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":41,"column":35}},{"name":"CLONE_DEEP_FLAG","generated":{"line":54,"column":85},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":41,"column":55}},{"generated":{"line":54,"column":100},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":41,"column":35}},{"generated":{"line":54,"column":101},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":41,"column":9}},{"generated":{"line":54,"column":102},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":41,"column":2}},{"generated":{"line":55,"column":0},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":42,"column":1}},{"name":"matchesProperty","generated":{"line":57,"column":18},"source":"node_modules\\lodash-es\\matchesProperty.js","original":{"line":44,"column":15}}],"sources":{"node_modules\\lodash-es\\matchesProperty.js":"import baseClone from './_baseClone.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a function that performs a partial deep comparison between the\n * value at `path` of a given object to `srcValue`, returning `true` if the\n * object value is equivalent, else `false`.\n *\n * **Note:** Partial comparisons will match empty array and empty object\n * `srcValue` values against any array or object value, respectively. See\n * `_.isEqual` for a list of supported value comparisons.\n *\n * **Note:** Multiple values can be checked by combining several matchers\n * using `_.overSome`\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n * @example\n *\n * var objects = [\n *   { 'a': 1, 'b': 2, 'c': 3 },\n *   { 'a': 4, 'b': 5, 'c': 6 }\n * ];\n *\n * _.find(objects, _.matchesProperty('a', 4));\n * // => { 'a': 4, 'b': 5, 'c': 6 }\n *\n * // Checking for several possible values\n * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n */\nfunction matchesProperty(path, srcValue) {\n  return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n}\n\nexport default matchesProperty;\n"},"lineCount":null}},"hash":"bd89acd1d03ad09245282a40867b4b74","cacheData":{"env":{}},"id":172}