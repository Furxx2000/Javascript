{"dependencies":[{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629813957808},{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629815470467},{"name":"./_baseSet.js","loc":{"line":1,"column":20},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\set.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseSet.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSet = require('./_baseSet.js');\n\nvar _baseSet2 = _interopRequireDefault(_baseSet);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : (0, _baseSet2.default)(object, path, value);\n}\n\nexports.default = set;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules\\lodash-es\\set.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules\\lodash-es\\set.js","original":{"line":3,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules\\lodash-es\\set.js","original":{"line":31,"column":0}},{"name":"set","generated":{"line":41,"column":9},"source":"node_modules\\lodash-es\\set.js","original":{"line":31,"column":9}},{"generated":{"line":41,"column":12},"source":"node_modules\\lodash-es\\set.js","original":{"line":31,"column":0}},{"name":"object","generated":{"line":41,"column":13},"source":"node_modules\\lodash-es\\set.js","original":{"line":31,"column":13}},{"generated":{"line":41,"column":19},"source":"node_modules\\lodash-es\\set.js","original":{"line":31,"column":0}},{"name":"path","generated":{"line":41,"column":21},"source":"node_modules\\lodash-es\\set.js","original":{"line":31,"column":21}},{"generated":{"line":41,"column":25},"source":"node_modules\\lodash-es\\set.js","original":{"line":31,"column":0}},{"name":"value","generated":{"line":41,"column":27},"source":"node_modules\\lodash-es\\set.js","original":{"line":31,"column":27}},{"generated":{"line":41,"column":32},"source":"node_modules\\lodash-es\\set.js","original":{"line":31,"column":0}},{"generated":{"line":41,"column":34},"source":"node_modules\\lodash-es\\set.js","original":{"line":31,"column":34}},{"generated":{"line":42,"column":0},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":2}},{"name":"object","generated":{"line":42,"column":9},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":9}},{"generated":{"line":42,"column":19},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":19}},{"generated":{"line":42,"column":23},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":9}},{"name":"object","generated":{"line":42,"column":26},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":26}},{"generated":{"line":42,"column":32},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":9}},{"generated":{"line":42,"column":35},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":35}},{"name":"object","generated":{"line":42,"column":58},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":43}},{"generated":{"line":42,"column":64},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":35}},{"name":"path","generated":{"line":42,"column":66},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":51}},{"generated":{"line":42,"column":70},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":35}},{"name":"value","generated":{"line":42,"column":72},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":57}},{"generated":{"line":42,"column":77},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":35}},{"generated":{"line":42,"column":78},"source":"node_modules\\lodash-es\\set.js","original":{"line":32,"column":2}},{"generated":{"line":43,"column":0},"source":"node_modules\\lodash-es\\set.js","original":{"line":33,"column":1}},{"name":"set","generated":{"line":45,"column":18},"source":"node_modules\\lodash-es\\set.js","original":{"line":35,"column":15}}],"sources":{"node_modules\\lodash-es\\set.js":"import baseSet from './_baseSet.js';\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nexport default set;\n"},"lineCount":null}},"hash":"8c176090d0e1237451359ea43f69e987","cacheData":{"env":{}},"id":233}