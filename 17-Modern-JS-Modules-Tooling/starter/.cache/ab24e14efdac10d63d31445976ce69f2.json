{"dependencies":[{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629813957808},{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629815470467},{"name":"./_baseIteratee.js","loc":{"line":1,"column":25},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\sumBy.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseIteratee.js"},{"name":"./_baseSum.js","loc":{"line":2,"column":20},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\sumBy.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseSum.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIteratee = require('./_baseIteratee.js');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _baseSum = require('./_baseSum.js');\n\nvar _baseSum2 = _interopRequireDefault(_baseSum);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return array && array.length ? (0, _baseSum2.default)(array, (0, _baseIteratee2.default)(iteratee, 2)) : 0;\n}\n\nexports.default = sumBy;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":4,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":27,"column":0}},{"name":"sumBy","generated":{"line":40,"column":9},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":27,"column":9}},{"generated":{"line":40,"column":14},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":27,"column":0}},{"name":"array","generated":{"line":40,"column":15},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":27,"column":15}},{"generated":{"line":40,"column":20},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":27,"column":0}},{"name":"iteratee","generated":{"line":40,"column":22},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":27,"column":22}},{"generated":{"line":40,"column":30},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":27,"column":0}},{"generated":{"line":40,"column":32},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":27,"column":32}},{"generated":{"line":41,"column":0},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":28,"column":2}},{"name":"array","generated":{"line":41,"column":9},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":28,"column":10}},{"name":"array","generated":{"line":41,"column":18},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":28,"column":19}},{"name":"length","generated":{"line":41,"column":24},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":28,"column":25}},{"generated":{"line":41,"column":30},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":28,"column":9}},{"generated":{"line":41,"column":33},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":29,"column":6}},{"name":"array","generated":{"line":41,"column":56},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":29,"column":14}},{"generated":{"line":41,"column":61},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":29,"column":6}},{"generated":{"line":41,"column":63},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":29,"column":21}},{"name":"iteratee","generated":{"line":41,"column":91},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":29,"column":34}},{"generated":{"line":41,"column":99},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":29,"column":21}},{"generated":{"line":41,"column":101},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":29,"column":44}},{"generated":{"line":41,"column":102},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":29,"column":21}},{"generated":{"line":41,"column":103},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":29,"column":6}},{"generated":{"line":41,"column":104},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":28,"column":9}},{"generated":{"line":41,"column":107},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":30,"column":6}},{"generated":{"line":41,"column":108},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":28,"column":2}},{"generated":{"line":42,"column":0},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":31,"column":1}},{"name":"sumBy","generated":{"line":44,"column":18},"source":"node_modules\\lodash-es\\sumBy.js","original":{"line":33,"column":15}}],"sources":{"node_modules\\lodash-es\\sumBy.js":"import baseIteratee from './_baseIteratee.js';\nimport baseSum from './_baseSum.js';\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee, 2))\n    : 0;\n}\n\nexport default sumBy;\n"},"lineCount":null}},"hash":"55578c295173659259bda5b8fa417abd","cacheData":{"env":{}},"id":260}