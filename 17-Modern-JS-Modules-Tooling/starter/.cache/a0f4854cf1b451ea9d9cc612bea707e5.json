{"dependencies":[{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629813957808},{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629815470467},{"name":"./isNumber.js","loc":{"line":1,"column":21},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\isNaN.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\isNumber.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isNumber = require('./isNumber.js');\n\nvar _isNumber2 = _interopRequireDefault(_isNumber);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Checks if `value` is `NaN`.\n *\n * **Note:** This method is based on\n * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n * `undefined` and other non-number values.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n * @example\n *\n * _.isNaN(NaN);\n * // => true\n *\n * _.isNaN(new Number(NaN));\n * // => true\n *\n * isNaN(undefined);\n * // => true\n *\n * _.isNaN(undefined);\n * // => false\n */\nfunction isNaN(value) {\n  // An `NaN` primitive is the only value that is not equal to itself.\n  // Perform the `toStringTag` check first to avoid errors with some\n  // ActiveX objects in IE.\n  return (0, _isNumber2.default)(value) && value != +value;\n}\n\nexports.default = isNaN;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":3,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":31,"column":0}},{"name":"isNaN","generated":{"line":41,"column":9},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":31,"column":9}},{"generated":{"line":41,"column":14},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":31,"column":0}},{"name":"value","generated":{"line":41,"column":15},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":31,"column":15}},{"generated":{"line":41,"column":20},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":31,"column":0}},{"generated":{"line":41,"column":22},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":31,"column":22}},{"generated":{"line":42,"column":0},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":32,"column":2}},{"generated":{"line":43,"column":0},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":33,"column":2}},{"generated":{"line":44,"column":0},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":34,"column":2}},{"generated":{"line":45,"column":0},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":35,"column":2}},{"generated":{"line":45,"column":9},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":35,"column":9}},{"name":"value","generated":{"line":45,"column":33},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":35,"column":18}},{"generated":{"line":45,"column":38},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":35,"column":9}},{"name":"value","generated":{"line":45,"column":43},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":35,"column":28}},{"generated":{"line":45,"column":52},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":35,"column":37}},{"name":"value","generated":{"line":45,"column":53},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":35,"column":38}},{"generated":{"line":45,"column":58},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":35,"column":2}},{"generated":{"line":46,"column":0},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":36,"column":1}},{"name":"isNaN","generated":{"line":48,"column":18},"source":"node_modules\\lodash-es\\isNaN.js","original":{"line":38,"column":15}}],"sources":{"node_modules\\lodash-es\\isNaN.js":"import isNumber from './isNumber.js';\n\n/**\n * Checks if `value` is `NaN`.\n *\n * **Note:** This method is based on\n * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n * `undefined` and other non-number values.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n * @example\n *\n * _.isNaN(NaN);\n * // => true\n *\n * _.isNaN(new Number(NaN));\n * // => true\n *\n * isNaN(undefined);\n * // => true\n *\n * _.isNaN(undefined);\n * // => false\n */\nfunction isNaN(value) {\n  // An `NaN` primitive is the only value that is not equal to itself.\n  // Perform the `toStringTag` check first to avoid errors with some\n  // ActiveX objects in IE.\n  return isNumber(value) && value != +value;\n}\n\nexport default isNaN;\n"},"lineCount":null}},"hash":"a1653acdf1be76572316af1eb56ceee9","cacheData":{"env":{}},"id":138}