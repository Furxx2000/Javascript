{"dependencies":[{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629813957808},{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629815470467}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nexports.default = hasUnicodeWord;","map":{"mappings":[{"generated":{"line":6,"column":0},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":0},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":2,"column":0}},{"name":"reHasUnicodeWord","generated":{"line":7,"column":4},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":2,"column":4}},{"generated":{"line":7,"column":23},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":2,"column":23}},{"generated":{"line":7,"column":91},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":11,"column":0}},{"name":"hasUnicodeWord","generated":{"line":16,"column":9},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":11,"column":9}},{"generated":{"line":16,"column":23},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":11,"column":0}},{"name":"string","generated":{"line":16,"column":24},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":11,"column":24}},{"generated":{"line":16,"column":30},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":11,"column":0}},{"generated":{"line":16,"column":32},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":11,"column":32}},{"generated":{"line":17,"column":0},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":12,"column":2}},{"name":"reHasUnicodeWord","generated":{"line":17,"column":9},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":12,"column":9}},{"name":"test","generated":{"line":17,"column":26},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":12,"column":26}},{"generated":{"line":17,"column":30},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":12,"column":9}},{"name":"string","generated":{"line":17,"column":31},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":12,"column":31}},{"generated":{"line":17,"column":37},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":12,"column":9}},{"generated":{"line":17,"column":38},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":12,"column":2}},{"generated":{"line":18,"column":0},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":13,"column":1}},{"name":"hasUnicodeWord","generated":{"line":20,"column":18},"source":"node_modules\\lodash-es\\_hasUnicodeWord.js","original":{"line":15,"column":15}}],"sources":{"node_modules\\lodash-es\\_hasUnicodeWord.js":"/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nexport default hasUnicodeWord;\n"},"lineCount":null}},"hash":"78c7182f8d462a7f1ba397b4a989753c","cacheData":{"env":{}},"id":808}