{"dependencies":[{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629813957808},{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629815470467},{"name":"./_baseFlatten.js","loc":{"line":1,"column":24},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\flatMapDepth.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\_baseFlatten.js"},{"name":"./map.js","loc":{"line":2,"column":16},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\flatMapDepth.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\map.js"},{"name":"./toInteger.js","loc":{"line":3,"column":22},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\flatMapDepth.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\toInteger.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseFlatten = require('./_baseFlatten.js');\n\nvar _baseFlatten2 = _interopRequireDefault(_baseFlatten);\n\nvar _map = require('./map.js');\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _toInteger = require('./toInteger.js');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.flatMap` except that it recursively flattens the\n * mapped results up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [[[n, n]]];\n * }\n *\n * _.flatMapDepth([1, 2], duplicate, 2);\n * // => [[1, 1], [2, 2]]\n */\nfunction flatMapDepth(collection, iteratee, depth) {\n  depth = depth === undefined ? 1 : (0, _toInteger2.default)(depth);\n  return (0, _baseFlatten2.default)((0, _map2.default)(collection, iteratee), depth);\n}\n\nexports.default = flatMapDepth;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":3,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":5,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":26,"column":0}},{"name":"flatMapDepth","generated":{"line":42,"column":9},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":26,"column":9}},{"generated":{"line":42,"column":21},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":26,"column":0}},{"name":"collection","generated":{"line":42,"column":22},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":26,"column":22}},{"generated":{"line":42,"column":32},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":26,"column":0}},{"name":"iteratee","generated":{"line":42,"column":34},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":26,"column":34}},{"generated":{"line":42,"column":42},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":26,"column":0}},{"name":"depth","generated":{"line":42,"column":44},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":26,"column":44}},{"generated":{"line":42,"column":49},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":26,"column":0}},{"generated":{"line":42,"column":51},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":26,"column":51}},{"name":"depth","generated":{"line":43,"column":0},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":27,"column":2}},{"name":"depth","generated":{"line":43,"column":10},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":27,"column":10}},{"name":"undefined","generated":{"line":43,"column":20},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":27,"column":20}},{"generated":{"line":43,"column":29},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":27,"column":10}},{"generated":{"line":43,"column":32},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":27,"column":32}},{"generated":{"line":43,"column":33},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":27,"column":10}},{"generated":{"line":43,"column":36},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":27,"column":36}},{"name":"depth","generated":{"line":43,"column":61},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":27,"column":46}},{"generated":{"line":43,"column":66},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":27,"column":36}},{"generated":{"line":43,"column":67},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":27,"column":2}},{"generated":{"line":44,"column":0},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":28,"column":2}},{"generated":{"line":44,"column":9},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":28,"column":9}},{"generated":{"line":44,"column":36},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":28,"column":21}},{"name":"collection","generated":{"line":44,"column":55},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":28,"column":25}},{"generated":{"line":44,"column":65},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":28,"column":21}},{"name":"iteratee","generated":{"line":44,"column":67},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":28,"column":37}},{"generated":{"line":44,"column":75},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":28,"column":21}},{"generated":{"line":44,"column":76},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":28,"column":9}},{"name":"depth","generated":{"line":44,"column":78},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":28,"column":48}},{"generated":{"line":44,"column":83},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":28,"column":9}},{"generated":{"line":44,"column":84},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":28,"column":2}},{"generated":{"line":45,"column":0},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":29,"column":1}},{"name":"flatMapDepth","generated":{"line":47,"column":18},"source":"node_modules\\lodash-es\\flatMapDepth.js","original":{"line":31,"column":15}}],"sources":{"node_modules\\lodash-es\\flatMapDepth.js":"import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\nimport toInteger from './toInteger.js';\n\n/**\n * This method is like `_.flatMap` except that it recursively flattens the\n * mapped results up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [[[n, n]]];\n * }\n *\n * _.flatMapDepth([1, 2], duplicate, 2);\n * // => [[1, 1], [2, 2]]\n */\nfunction flatMapDepth(collection, iteratee, depth) {\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(map(collection, iteratee), depth);\n}\n\nexport default flatMapDepth;\n"},"lineCount":null}},"hash":"342628c8d03ad389507d96096c8bba15","cacheData":{"env":{}},"id":82}