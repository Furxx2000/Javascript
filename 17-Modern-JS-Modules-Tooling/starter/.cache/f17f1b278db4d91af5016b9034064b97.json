{"dependencies":[{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629813957808},{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629815470467}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeJoin = arrayProto.join;\n\n/**\n * Converts all elements in `array` into a string separated by `separator`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to convert.\n * @param {string} [separator=','] The element separator.\n * @returns {string} Returns the joined string.\n * @example\n *\n * _.join(['a', 'b', 'c'], '~');\n * // => 'a~b~c'\n */\nfunction join(array, separator) {\n  return array == null ? '' : nativeJoin.call(array, separator);\n}\n\nexports.default = join;","map":{"mappings":[{"generated":{"line":6,"column":0},"source":"node_modules\\lodash-es\\join.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":0},"source":"node_modules\\lodash-es\\join.js","original":{"line":2,"column":0}},{"name":"arrayProto","generated":{"line":7,"column":4},"source":"node_modules\\lodash-es\\join.js","original":{"line":2,"column":4}},{"name":"Array","generated":{"line":7,"column":17},"source":"node_modules\\lodash-es\\join.js","original":{"line":2,"column":17}},{"name":"prototype","generated":{"line":7,"column":23},"source":"node_modules\\lodash-es\\join.js","original":{"line":2,"column":23}},{"generated":{"line":7,"column":32},"source":"node_modules\\lodash-es\\join.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules\\lodash-es\\join.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules\\lodash-es\\join.js","original":{"line":5,"column":0}},{"name":"nativeJoin","generated":{"line":10,"column":4},"source":"node_modules\\lodash-es\\join.js","original":{"line":5,"column":4}},{"name":"arrayProto","generated":{"line":10,"column":17},"source":"node_modules\\lodash-es\\join.js","original":{"line":5,"column":17}},{"name":"join","generated":{"line":10,"column":28},"source":"node_modules\\lodash-es\\join.js","original":{"line":5,"column":28}},{"generated":{"line":10,"column":32},"source":"node_modules\\lodash-es\\join.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules\\lodash-es\\join.js","original":{"line":7,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules\\lodash-es\\join.js","original":{"line":22,"column":0}},{"name":"join","generated":{"line":27,"column":9},"source":"node_modules\\lodash-es\\join.js","original":{"line":22,"column":9}},{"generated":{"line":27,"column":13},"source":"node_modules\\lodash-es\\join.js","original":{"line":22,"column":0}},{"name":"array","generated":{"line":27,"column":14},"source":"node_modules\\lodash-es\\join.js","original":{"line":22,"column":14}},{"generated":{"line":27,"column":19},"source":"node_modules\\lodash-es\\join.js","original":{"line":22,"column":0}},{"name":"separator","generated":{"line":27,"column":21},"source":"node_modules\\lodash-es\\join.js","original":{"line":22,"column":21}},{"generated":{"line":27,"column":30},"source":"node_modules\\lodash-es\\join.js","original":{"line":22,"column":0}},{"generated":{"line":27,"column":32},"source":"node_modules\\lodash-es\\join.js","original":{"line":22,"column":32}},{"generated":{"line":28,"column":0},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":2}},{"name":"array","generated":{"line":28,"column":9},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":9}},{"generated":{"line":28,"column":18},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":18}},{"generated":{"line":28,"column":22},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":9}},{"generated":{"line":28,"column":25},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":25}},{"generated":{"line":28,"column":27},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":9}},{"name":"nativeJoin","generated":{"line":28,"column":30},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":30}},{"name":"call","generated":{"line":28,"column":41},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":41}},{"generated":{"line":28,"column":45},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":30}},{"name":"array","generated":{"line":28,"column":46},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":46}},{"generated":{"line":28,"column":51},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":30}},{"name":"separator","generated":{"line":28,"column":53},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":53}},{"generated":{"line":28,"column":62},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":30}},{"generated":{"line":28,"column":63},"source":"node_modules\\lodash-es\\join.js","original":{"line":23,"column":2}},{"generated":{"line":29,"column":0},"source":"node_modules\\lodash-es\\join.js","original":{"line":24,"column":1}},{"name":"join","generated":{"line":31,"column":18},"source":"node_modules\\lodash-es\\join.js","original":{"line":26,"column":15}}],"sources":{"node_modules\\lodash-es\\join.js":"/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeJoin = arrayProto.join;\n\n/**\n * Converts all elements in `array` into a string separated by `separator`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to convert.\n * @param {string} [separator=','] The element separator.\n * @returns {string} Returns the joined string.\n * @example\n *\n * _.join(['a', 'b', 'c'], '~');\n * // => 'a~b~c'\n */\nfunction join(array, separator) {\n  return array == null ? '' : nativeJoin.call(array, separator);\n}\n\nexport default join;\n"},"lineCount":null}},"hash":"2182e5be55a253378c57a7eae5a5608b","cacheData":{"env":{}},"id":156}