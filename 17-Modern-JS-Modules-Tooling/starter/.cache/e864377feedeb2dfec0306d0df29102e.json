{"dependencies":[{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1629813957808},{"name":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\package.json","includedInParent":true,"mtime":1629815470467},{"name":"./toString.js","loc":{"line":1,"column":21},"parent":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\replace.js","resolved":"C:\\Users\\WEN\\Desktop\\complete-javascript-course-master\\17-Modern-JS-Modules-Tooling\\starter\\node_modules\\lodash-es\\toString.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toString = require('./toString.js');\n\nvar _toString2 = _interopRequireDefault(_toString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Replaces matches for `pattern` in `string` with `replacement`.\n *\n * **Note:** This method is based on\n * [`String#replace`](https://mdn.io/String/replace).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to modify.\n * @param {RegExp|string} pattern The pattern to replace.\n * @param {Function|string} replacement The match replacement.\n * @returns {string} Returns the modified string.\n * @example\n *\n * _.replace('Hi Fred', 'Fred', 'Barney');\n * // => 'Hi Barney'\n */\nfunction replace() {\n  var args = arguments,\n      string = (0, _toString2.default)(args[0]);\n\n  return args.length < 3 ? string : string.replace(args[1], args[2]);\n}\n\nexports.default = replace;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules\\lodash-es\\replace.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules\\lodash-es\\replace.js","original":{"line":3,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules\\lodash-es\\replace.js","original":{"line":22,"column":0}},{"name":"replace","generated":{"line":32,"column":9},"source":"node_modules\\lodash-es\\replace.js","original":{"line":22,"column":9}},{"generated":{"line":32,"column":16},"source":"node_modules\\lodash-es\\replace.js","original":{"line":22,"column":0}},{"generated":{"line":32,"column":19},"source":"node_modules\\lodash-es\\replace.js","original":{"line":22,"column":19}},{"generated":{"line":33,"column":0},"source":"node_modules\\lodash-es\\replace.js","original":{"line":23,"column":2}},{"name":"args","generated":{"line":33,"column":6},"source":"node_modules\\lodash-es\\replace.js","original":{"line":23,"column":6}},{"name":"arguments","generated":{"line":33,"column":13},"source":"node_modules\\lodash-es\\replace.js","original":{"line":23,"column":13}},{"generated":{"line":33,"column":22},"source":"node_modules\\lodash-es\\replace.js","original":{"line":23,"column":2}},{"generated":{"line":34,"column":0},"source":"node_modules\\lodash-es\\replace.js","original":{"line":23,"column":2}},{"name":"string","generated":{"line":34,"column":6},"source":"node_modules\\lodash-es\\replace.js","original":{"line":24,"column":6}},{"generated":{"line":34,"column":15},"source":"node_modules\\lodash-es\\replace.js","original":{"line":24,"column":15}},{"name":"args","generated":{"line":34,"column":39},"source":"node_modules\\lodash-es\\replace.js","original":{"line":24,"column":24}},{"generated":{"line":34,"column":44},"source":"node_modules\\lodash-es\\replace.js","original":{"line":24,"column":29}},{"generated":{"line":34,"column":45},"source":"node_modules\\lodash-es\\replace.js","original":{"line":24,"column":24}},{"generated":{"line":34,"column":46},"source":"node_modules\\lodash-es\\replace.js","original":{"line":24,"column":15}},{"generated":{"line":34,"column":47},"source":"node_modules\\lodash-es\\replace.js","original":{"line":23,"column":2}},{"generated":{"line":36,"column":0},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":2}},{"name":"args","generated":{"line":36,"column":9},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":9}},{"name":"length","generated":{"line":36,"column":14},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":14}},{"generated":{"line":36,"column":20},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":9}},{"generated":{"line":36,"column":23},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":23}},{"generated":{"line":36,"column":24},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":9}},{"name":"string","generated":{"line":36,"column":27},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":27}},{"generated":{"line":36,"column":33},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":9}},{"name":"string","generated":{"line":36,"column":36},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":36}},{"name":"replace","generated":{"line":36,"column":43},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":43}},{"generated":{"line":36,"column":50},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":36}},{"name":"args","generated":{"line":36,"column":51},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":51}},{"generated":{"line":36,"column":56},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":56}},{"generated":{"line":36,"column":57},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":51}},{"generated":{"line":36,"column":58},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":36}},{"name":"args","generated":{"line":36,"column":60},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":60}},{"generated":{"line":36,"column":65},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":65}},{"generated":{"line":36,"column":66},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":60}},{"generated":{"line":36,"column":67},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":36}},{"generated":{"line":36,"column":68},"source":"node_modules\\lodash-es\\replace.js","original":{"line":26,"column":2}},{"generated":{"line":37,"column":0},"source":"node_modules\\lodash-es\\replace.js","original":{"line":27,"column":1}},{"name":"replace","generated":{"line":39,"column":18},"source":"node_modules\\lodash-es\\replace.js","original":{"line":29,"column":15}}],"sources":{"node_modules\\lodash-es\\replace.js":"import toString from './toString.js';\n\n/**\n * Replaces matches for `pattern` in `string` with `replacement`.\n *\n * **Note:** This method is based on\n * [`String#replace`](https://mdn.io/String/replace).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to modify.\n * @param {RegExp|string} pattern The pattern to replace.\n * @param {Function|string} replacement The match replacement.\n * @returns {string} Returns the modified string.\n * @example\n *\n * _.replace('Hi Fred', 'Fred', 'Barney');\n * // => 'Hi Barney'\n */\nfunction replace() {\n  var args = arguments,\n      string = toString(args[0]);\n\n  return args.length < 3 ? string : string.replace(args[1], args[2]);\n}\n\nexport default replace;\n"},"lineCount":null}},"hash":"9b19e9c7e55f7367ab5252ebfd3ea5d1","cacheData":{"env":{}},"id":226}